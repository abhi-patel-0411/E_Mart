UNUSED PYTHON FILES - SAFE TO DELETE
=====================================

The following Python files are NOT imported or used anywhere in the project:

1. backend/store/simple_checkout.py
   - Not imported in urls.py or any other file
   - Likely a duplicate/old checkout implementation

2. backend/store/ml_recommender.py  
   - Not imported in urls.py or views.py
   - ML functionality is handled by other ML files

3. backend/store/offer_cleanup.py
   - Only used in one admin view but functionality is duplicated
   - Cleanup is handled by middleware and model methods

4. backend/store/product_utils.py
   - Only contains admin_toggle_product_availability function
   - This function is imported but could be moved to views.py

5. backend/store/revenue_utils.py
   - Only contains get_total_revenue function
   - Simple function that could be moved to views.py

6. backend/store/stock_utils.py
   - Only contains update_checkout_stock function
   - Simple function that could be moved to views.py

7. backend/app.py
   - Not used, likely leftover from initial setup

8. backend/create_admin.py
   - Utility script, not part of main application

9. backend/create_superuser.py
   - Utility script, not part of main application

MIGRATION FILES (Optional cleanup):
==================================
These are auto-generated and some might be redundant:
- backend/store/migrations/0002_electronics_update.py
- backend/store/migrations/0002_remove_combo_offers.py (duplicate 0002)
- backend/store/migrations/0005_merge_20250710_2144.py
- backend/store/migrations/0013_merge_20250723_2329.py
- backend/store/migrations/0017_merge_20250725_2048.py

COMMANDS (Optional):
===================
- backend/store/management/commands/cleanup_expired_offers.py
- backend/store/management/commands/cleanup_offers.py
(These are Django management commands, keep if you use them)

RECOMMENDATION:
===============
1. Delete files 1-3 immediately (completely unused)
2. Consider consolidating files 4-6 into views.py
3. Delete utility scripts 7-9 if not needed
4. Keep migration files unless you're sure they're not needed
5. Keep command files if you use Django management commands

TOTAL SPACE SAVED: Approximately 15-20KB
RISK LEVEL: LOW (these files are not imported anywhere)